@model EmployeeSurvey.PresentationData.ViewModels.StatisticsIndexViewModel

@{
    ViewBag.Title = Localization.TitlePageStatisticsIndex;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <div id="chartContainerJunior" style="height: 370px; width: 100%; margin-top: 15px; margin-bottom: 60px;"></div>
    <div id="chartContainerMid" style="height: 370px; width: 100%; margin-top: 15px; margin-bottom: 60px;"></div>
    <div id="chartContainerSenior" style="height: 370px; width: 100%; margin-top: 15px; margin-bottom: 60px;"></div>
}

@section scripts {

    <script type="text/javascript">
        window.onload = function () {
            renderChart(
                "chartContainerJunior",
                @Html.Raw(Model.DatapointDictionary[EmployeeSurvey.PresentationData.Enums.SeniorityLevel.Junior]),
                "@Localization.SeniorityLevelJunior");

            renderChart(
                "chartContainerMid",
                @Html.Raw(Model.DatapointDictionary[EmployeeSurvey.PresentationData.Enums.SeniorityLevel.Mid]),
                "@Localization.SeniorityLevelMid");

            renderChart(
                "chartContainerSenior",
                @Html.Raw(Model.DatapointDictionary[EmployeeSurvey.PresentationData.Enums.SeniorityLevel.Senior]),
                "@Localization.SeniorityLevelSenior");
        }

        function renderChart(containerName, dataPoints, titleText) {
            var chartJunior = new CanvasJS.Chart(containerName, {
	            exportEnabled: true,
	            animationEnabled: true,
	            theme: "light2",
                title: {
                    text: titleText
                },
	            legend: {
		            cursor: "pointer",
		            itemclick: explodePie,
		            verticalAlign: "center",
		            horizontalAlign: "right"
	            },
	            data: [{
                    type: "pie",
		            showInLegend: true,
		            toolTipContent: "{name}: <strong>{y}</strong>",
                    startAngle: -45,
                    yValueFormatString: "##0.00\"%\"",
		            indexLabel: "{name} ({y})",
		            indexLabelFontColor: "#12122B",
		            indexLabelPlacement: "inside",
                    indexLabelFontSize: 15,
                    dataPoints: dataPoints
	            }]
            });

            chartJunior.render();
        }

        function explodePie(e) {
	        if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
		        e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
	        } else {
		        e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
	        }
	        e.chart.render();
        }
    </script>
    @Scripts.Render("~/bundles/canvasjs")
}